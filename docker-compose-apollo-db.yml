services:
    mysql:
        container_name: apollo_db
        image: mysql:8.0
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: Test@123
            MYSQL_DATABASE: apollo_social_media
            MYSQL_USER: social_media_user
            MYSQL_PASSWORD: Test@123
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            timeout: 20s
            retries: 10
        ports:
            - "3306:3306"
        volumes:
            - db_vol:/var/lib/mysql
            - ./apollo-social-media-graphql-service/resources:/docker-entrypoint-initdb.d:ro

    zookeeper:
            image: confluentinc/cp-zookeeper:7.3.2
            container_name: zookeeper
            environment:
                ZOOKEEPER_CLIENT_PORT: 2181
                ZOOKEEPER_TICK_TIME: 2000
                ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN
                ZOOKEEPER_LOG4J_LOGLEVEL: WARN

    kafka_broker:
        image: confluentinc/cp-kafka:7.3.2
        container_name: broker
        ports:
            - "9092:9092"
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka_broker:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=WARN"
            KAFKA_LOG4J_ROOT_LOGLEVE: WARN
            KAFKA_LOG4J_LOGLEVEL: WARN

volumes:
    db_vol:
